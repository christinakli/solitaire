{"remainingRequest":"/Users/christina/jqwtest/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/christina/jqwtest/node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxdragdrop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/christina/jqwtest/node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxdragdrop.vue","mtime":499162500000},{"path":"/Users/christina/jqwtest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/christina/jqwtest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/christina/jqwtest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/christina/jqwtest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport '../jqwidgets/jqxcore.js';\nimport '../jqwidgets/jqxdragdrop.js';\n\nexport default {\n    props: {\n        appendTo: String,\n        disabled: Boolean,\n        distance: Number,\n        data: Object,\n        dropAction: String,\n        dropTarget: [String, Object],\n        dragZIndex: Number,\n        feedback: String,\n        initFeedback: Function,\n        opacity: Number,\n        onDragEnd: Function,\n        onDrag: Function,\n        onDragStart: Function,\n        onTargetDrop: Function,\n        onDropTargetEnter: Function,\n        onDropTargetLeave: Function,\n        restricter: [String, Object],\n        revert: Boolean,\n        revertDuration: Number,\n        tolerance: String,\n        autoCreate: {\n            default: true,\n            type: Boolean\n        }\n    },\n    created: function () {\n        this.id = 'jqxDragDrop' + JQXLite.generateID();\n        this.componentSelector = '#' + this.id;\n    },\n    mounted: function () {\n        if (this.autoCreate) this.__createComponent__();\n    },\n    methods: {\n        createComponent: function (options) {\n            if (!this.autoCreate) this.__createComponent__(options)\n            else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n        },\n        setOptions: function (options) {\n            JQXLite(this.componentSelector).jqxDragDrop(options);\n        },\n        getOptions: function () {\n            const usedProps = Object.keys(this.__manageProps__());\n            const resultToReturn = {};\n            for (let i = 0; i < usedProps.length; i++) {\n                resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxDragDrop(usedProps[i]);\n            }\n            return resultToReturn;\n        },\n        _appendTo: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('appendTo', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('appendTo');\n            }\n        },\n        _disabled: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('disabled', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('disabled');\n            }\n        },\n        _distance: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('distance', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('distance');\n            }\n        },\n        _data: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('data', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('data');\n            }\n        },\n        _dropAction: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('dropAction', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('dropAction');\n            }\n        },\n        _dropTarget: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('dropTarget', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('dropTarget');\n            }\n        },\n        _dragZIndex: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('dragZIndex', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('dragZIndex');\n            }\n        },\n        _feedback: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('feedback', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('feedback');\n            }\n        },\n        _initFeedback: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('initFeedback', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('initFeedback');\n            }\n        },\n        _opacity: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('opacity', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('opacity');\n            }\n        },\n        _onDragEnd: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onDragEnd', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onDragEnd');\n            }\n        },\n        _onDrag: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onDrag', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onDrag');\n            }\n        },\n        _onDragStart: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onDragStart', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onDragStart');\n            }\n        },\n        _onTargetDrop: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop');\n            }\n        },\n        _onDropTargetEnter: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter');\n            }\n        },\n        _onDropTargetLeave: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave');\n            }\n        },\n        _restricter: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('restricter', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('restricter');\n            }\n        },\n        _revert: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('revert', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('revert');\n            }\n        },\n        _revertDuration: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('revertDuration', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('revertDuration');\n            }\n        },\n        _tolerance: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxDragDrop('tolerance', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxDragDrop('tolerance');\n            }\n        },\n        __createComponent__: function (options) {\n            let widgetOptions;\n            options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n            JQXLite(this.componentSelector).jqxDragDrop(widgetOptions);\n            this.__extendProps__();\n            this.__wireEvents__();\n        },\n        __manageProps__: function () {\n            const widgetProps = ['appendTo','disabled','distance','data','dropAction','dropTarget','dragZIndex','feedback','initFeedback','opacity','onDragEnd','onDrag','onDragStart','onTargetDrop','onDropTargetEnter','onDropTargetLeave','restricter','revert','revertDuration','tolerance'];\n            const componentProps = this.$options.propsData;\n            let options = {};\n\n            for (let prop in componentProps) {\n                if (widgetProps.indexOf(prop) !== -1) {\n                    options[prop] = componentProps[prop];\n                }\n            }\n            return options;\n        },\n        __extendProps__: function () {\n            const that = this;\n\n            Object.defineProperty(that, 'appendTo', {\n                get: function() {\n                    return that._appendTo();\n                },\n                set: function(newValue) {\n                    that._appendTo(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'disabled', {\n                get: function() {\n                    return that._disabled();\n                },\n                set: function(newValue) {\n                    that._disabled(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'distance', {\n                get: function() {\n                    return that._distance();\n                },\n                set: function(newValue) {\n                    that._distance(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'data', {\n                get: function() {\n                    return that._data();\n                },\n                set: function(newValue) {\n                    that._data(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dropAction', {\n                get: function() {\n                    return that._dropAction();\n                },\n                set: function(newValue) {\n                    that._dropAction(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dropTarget', {\n                get: function() {\n                    return that._dropTarget();\n                },\n                set: function(newValue) {\n                    that._dropTarget(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dragZIndex', {\n                get: function() {\n                    return that._dragZIndex();\n                },\n                set: function(newValue) {\n                    that._dragZIndex(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'feedback', {\n                get: function() {\n                    return that._feedback();\n                },\n                set: function(newValue) {\n                    that._feedback(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'initFeedback', {\n                get: function() {\n                    return that._initFeedback();\n                },\n                set: function(newValue) {\n                    that._initFeedback(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'opacity', {\n                get: function() {\n                    return that._opacity();\n                },\n                set: function(newValue) {\n                    that._opacity(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onDragEnd', {\n                get: function() {\n                    return that._onDragEnd();\n                },\n                set: function(newValue) {\n                    that._onDragEnd(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onDrag', {\n                get: function() {\n                    return that._onDrag();\n                },\n                set: function(newValue) {\n                    that._onDrag(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onDragStart', {\n                get: function() {\n                    return that._onDragStart();\n                },\n                set: function(newValue) {\n                    that._onDragStart(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onTargetDrop', {\n                get: function() {\n                    return that._onTargetDrop();\n                },\n                set: function(newValue) {\n                    that._onTargetDrop(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onDropTargetEnter', {\n                get: function() {\n                    return that._onDropTargetEnter();\n                },\n                set: function(newValue) {\n                    that._onDropTargetEnter(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'onDropTargetLeave', {\n                get: function() {\n                    return that._onDropTargetLeave();\n                },\n                set: function(newValue) {\n                    that._onDropTargetLeave(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'restricter', {\n                get: function() {\n                    return that._restricter();\n                },\n                set: function(newValue) {\n                    that._restricter(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'revert', {\n                get: function() {\n                    return that._revert();\n                },\n                set: function(newValue) {\n                    that._revert(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'revertDuration', {\n                get: function() {\n                    return that._revertDuration();\n                },\n                set: function(newValue) {\n                    that._revertDuration(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'tolerance', {\n                get: function() {\n                    return that._tolerance();\n                },\n                set: function(newValue) {\n                    that._tolerance(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        },\n        __wireEvents__: function () {\n            const that = this;\n\n            JQXLite(this.componentSelector).on('dragStart', function (event) { that.$emit('dragStart', event); });\n            JQXLite(this.componentSelector).on('dragEnd', function (event) { that.$emit('dragEnd', event); });\n            JQXLite(this.componentSelector).on('dragging', function (event) { that.$emit('dragging', event); });\n            JQXLite(this.componentSelector).on('dropTargetEnter', function (event) { that.$emit('dropTargetEnter', event); });\n            JQXLite(this.componentSelector).on('dropTargetLeave', function (event) { that.$emit('dropTargetLeave', event); });\n        }\n    }\n}\n",{"version":3,"sources":["vue_jqxdragdrop.vue"],"names":[],"mappingsfile":"vue_jqxdragdrop.vue","sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxdragdrop.js';\n\n    export default {\n        props: {\n            appendTo: String,\n            disabled: Boolean,\n            distance: Number,\n            data: Object,\n            dropAction: String,\n            dropTarget: [String, Object],\n            dragZIndex: Number,\n            feedback: String,\n            initFeedback: Function,\n            opacity: Number,\n            onDragEnd: Function,\n            onDrag: Function,\n            onDragStart: Function,\n            onTargetDrop: Function,\n            onDropTargetEnter: Function,\n            onDropTargetLeave: Function,\n            restricter: [String, Object],\n            revert: Boolean,\n            revertDuration: Number,\n            tolerance: String,\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxDragDrop' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxDragDrop(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxDragDrop(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            _appendTo: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('appendTo', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('appendTo');\n                }\n            },\n            _disabled: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('disabled', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('disabled');\n                }\n            },\n            _distance: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('distance', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('distance');\n                }\n            },\n            _data: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('data', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('data');\n                }\n            },\n            _dropAction: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('dropAction', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('dropAction');\n                }\n            },\n            _dropTarget: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('dropTarget', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('dropTarget');\n                }\n            },\n            _dragZIndex: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('dragZIndex', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('dragZIndex');\n                }\n            },\n            _feedback: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('feedback', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('feedback');\n                }\n            },\n            _initFeedback: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('initFeedback', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('initFeedback');\n                }\n            },\n            _opacity: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('opacity', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('opacity');\n                }\n            },\n            _onDragEnd: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onDragEnd', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onDragEnd');\n                }\n            },\n            _onDrag: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onDrag', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onDrag');\n                }\n            },\n            _onDragStart: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onDragStart', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onDragStart');\n                }\n            },\n            _onTargetDrop: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onTargetDrop');\n                }\n            },\n            _onDropTargetEnter: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetEnter');\n                }\n            },\n            _onDropTargetLeave: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('onDropTargetLeave');\n                }\n            },\n            _restricter: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('restricter', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('restricter');\n                }\n            },\n            _revert: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('revert', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('revert');\n                }\n            },\n            _revertDuration: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('revertDuration', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('revertDuration');\n                }\n            },\n            _tolerance: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxDragDrop('tolerance', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxDragDrop('tolerance');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxDragDrop(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['appendTo','disabled','distance','data','dropAction','dropTarget','dragZIndex','feedback','initFeedback','opacity','onDragEnd','onDrag','onDragStart','onTargetDrop','onDropTargetEnter','onDropTargetLeave','restricter','revert','revertDuration','tolerance'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'appendTo', {\n                    get: function() {\n                        return that._appendTo();\n                    },\n                    set: function(newValue) {\n                        that._appendTo(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'disabled', {\n                    get: function() {\n                        return that._disabled();\n                    },\n                    set: function(newValue) {\n                        that._disabled(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'distance', {\n                    get: function() {\n                        return that._distance();\n                    },\n                    set: function(newValue) {\n                        that._distance(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'data', {\n                    get: function() {\n                        return that._data();\n                    },\n                    set: function(newValue) {\n                        that._data(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dropAction', {\n                    get: function() {\n                        return that._dropAction();\n                    },\n                    set: function(newValue) {\n                        that._dropAction(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dropTarget', {\n                    get: function() {\n                        return that._dropTarget();\n                    },\n                    set: function(newValue) {\n                        that._dropTarget(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dragZIndex', {\n                    get: function() {\n                        return that._dragZIndex();\n                    },\n                    set: function(newValue) {\n                        that._dragZIndex(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'feedback', {\n                    get: function() {\n                        return that._feedback();\n                    },\n                    set: function(newValue) {\n                        that._feedback(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'initFeedback', {\n                    get: function() {\n                        return that._initFeedback();\n                    },\n                    set: function(newValue) {\n                        that._initFeedback(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'opacity', {\n                    get: function() {\n                        return that._opacity();\n                    },\n                    set: function(newValue) {\n                        that._opacity(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onDragEnd', {\n                    get: function() {\n                        return that._onDragEnd();\n                    },\n                    set: function(newValue) {\n                        that._onDragEnd(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onDrag', {\n                    get: function() {\n                        return that._onDrag();\n                    },\n                    set: function(newValue) {\n                        that._onDrag(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onDragStart', {\n                    get: function() {\n                        return that._onDragStart();\n                    },\n                    set: function(newValue) {\n                        that._onDragStart(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onTargetDrop', {\n                    get: function() {\n                        return that._onTargetDrop();\n                    },\n                    set: function(newValue) {\n                        that._onTargetDrop(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onDropTargetEnter', {\n                    get: function() {\n                        return that._onDropTargetEnter();\n                    },\n                    set: function(newValue) {\n                        that._onDropTargetEnter(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'onDropTargetLeave', {\n                    get: function() {\n                        return that._onDropTargetLeave();\n                    },\n                    set: function(newValue) {\n                        that._onDropTargetLeave(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'restricter', {\n                    get: function() {\n                        return that._restricter();\n                    },\n                    set: function(newValue) {\n                        that._restricter(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'revert', {\n                    get: function() {\n                        return that._revert();\n                    },\n                    set: function(newValue) {\n                        that._revert(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'revertDuration', {\n                    get: function() {\n                        return that._revertDuration();\n                    },\n                    set: function(newValue) {\n                        that._revertDuration(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'tolerance', {\n                    get: function() {\n                        return that._tolerance();\n                    },\n                    set: function(newValue) {\n                        that._tolerance(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('dragStart', function (event) { that.$emit('dragStart', event); });\n                JQXLite(this.componentSelector).on('dragEnd', function (event) { that.$emit('dragEnd', event); });\n                JQXLite(this.componentSelector).on('dragging', function (event) { that.$emit('dragging', event); });\n                JQXLite(this.componentSelector).on('dropTargetEnter', function (event) { that.$emit('dropTargetEnter', event); });\n                JQXLite(this.componentSelector).on('dropTargetLeave', function (event) { that.$emit('dropTargetLeave', event); });\n            }\n        }\n    }\n</script>\n"]}]}